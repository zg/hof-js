/* hof by github.com/zg (2015-05-11) */
_assert=function(a,b){if(!a){var b=b||"Assertion failed";if("undefined"!=typeof Error)throw new Error(b);throw b}},_equals=function(a,b){if(a===b)return!0;if(null==a||null==b)return!1;if(a.length!=b.length)return!1;for(index in a)if("[object Array]"==Object.prototype.toString.call(a[index])){if(!_equals(a[index],b[index]))return!1}else if(a[index]!==b[index])return!1;return!0},average=function(a){return reduce(a,function(a,b){return a+b},0)/a.length},every=function(a,b){for(index in a)if(!_equals(a[index],b))return!1;return!0},filter=function(a,b){var c=[];for(index in a)b(a[index])&&c.push(a[index]);return c},fold=function(a,b,c){var d=c;for(index in a)d=b(d,a[index]);return d},foldRight=function(a,b,c){var d=c;for(index in a)d=b(d,a[a.length-index-1]);return d},forEach=function(a,b){for(index in a)b(a[index])},groupBy=function(a,b){var c=[];for(index in a)group=b(a[index]),c[group]||(c[group]=[]),c[group].push(a[index]);return c},map=function(a,b){var c=[];for(index in a)c.push(b(a[index]));return c},none=function(a,b){for(index in a)if(!_equals(a[index],b))return!1;return!0},product=function(a,b,c){var c=c||function(a){return a};return fold(map(range(a,b+1),c),function(a,b){return a*b},1)},range=function(a,b,c){_assert(!(0===c),"Cannot take a step");var c=c||1;_assert(!(b>a&&0>c),"Invalid range (infinite loop)"),_assert(!(a>b&&c>0),"Invalid range (infinite loop)");var d=[];if(c>0)for(d.push(a);d[d.length-1]+c<b;d.push(d[d.length-1]+c));else for(d.push(a);d[d.length-1]+c>b;d.push(d[d.length-1]+c));return d},reduce=function(a,b){return fold(a,b,0)},reduceRight=function(a,b){return foldRight(a,b,0)},reverse=function(a){var b=a.length>>1;for(index in a)index<b&&(a[a.length-index-1]^=a[index],a[index]^=a[a.length-index-1],a[a.length-index-1]^=a[index]);return a},some=function(a,b){for(index in a)if(_equals(a[index],b))return!0;return!1},sum=function(a,b,c){var c=c||function(a){return a};return reduce(map(range(a,b+1),c),function(a,b){return a+b})};
